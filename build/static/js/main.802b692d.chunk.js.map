{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Pregunta","setRestante","setPresupuesto","setMostrarPregunta","useState","cantidad","setCantidad","error","setError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","setGasto","setCrearGasto","nombre","setNombre","trim","gasto","id","shortid","generate","Gasto","eliminar","onClick","Listado","props","gastos","map","key","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","setGastos","crearGasto","useEffect","presupuestoRestante","nuevoGasto","filter","nuevoPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.802b692d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Error = ({ mensaje }) => (\n    <p className=\"alert alert-danger error\">{mensaje}</p>\n);\n\nError.propTypes = {\n    mensaje: PropTypes.string.isRequired,\n\n}\nexport default Error;","import React, { Fragment, useState } from 'react';\nimport Error from \"./Error\";\nimport PropTypes from \"prop-types\";\n\nconst Pregunta = ({ setRestante, setPresupuesto, setMostrarPregunta }) => {\n\n    const [cantidad, setCantidad] = useState(0);\n    const [error, setError] = useState(false);\n\n\n    const definirPresupuesto = (e) => {\n        setCantidad(parseInt(e.target.value))\n    };\n\n    const agregarPresupuesto = (e) => {\n        e.preventDefault();\n\n        if (cantidad < 1 || isNaN(cantidad)) {\n            setError(true)\n            return;\n        }\n        setError(false);\n        setPresupuesto(cantidad);\n        setRestante(cantidad);\n        setMostrarPregunta(false);\n    }\n\n\n\n    return (\n        <Fragment>\n            <h2>Coloca tu presupuesto</h2>\n            {error ? <Error mensaje=\"El presupuesto es incorrecto\" /> : null}\n            <form\n                onSubmit={agregarPresupuesto}\n            >\n                <input\n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Coloca tu presupuesto\"\n                    onChange={definirPresupuesto}\n                />\n                <input\n                    type=\"submit\"\n                    className=\"button-primary u-full-width\"\n                    value=\"Definir Presupuesto\"\n                />\n            </form>\n        </Fragment>\n    );\n}\n\nPregunta.propTypes = {\n    setRestante: PropTypes.func.isRequired,\n    setPresupuesto: PropTypes.func.isRequired,\n    setMostrarPregunta: PropTypes.func.isRequired\n}\n\nexport default Pregunta;","import React, { useState } from 'react';\nimport Error from \"./Error\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\n\nconst Formulario = ({ setGasto, setCrearGasto }) => {\n\n    const [nombre, setNombre] = useState(\"\");\n    const [cantidad, setCantidad] = useState(0);\n    const [error, setError] = useState(false);\n\n    const agregarGasto = (e) => {\n        e.preventDefault();\n\n        if (\n            cantidad < 1 ||\n            isNaN(cantidad) ||\n            nombre.trim() === \"\"\n        ) {\n            setError(true);\n            return;\n        }\n        setError(false);\n\n        const gasto = {\n            nombre,\n            cantidad,\n            id: shortid.generate()\n        }\n\n        setGasto(gasto);\n        setCrearGasto(true);\n        setNombre(\"\");\n        setCantidad(0);\n    }\n\n\n    return (\n        <form\n            onSubmit={agregarGasto}\n        >\n            <h2>Agrega tus gastos aqu√≠</h2>\n            {error\n                ? <Error\n                    mensaje=\"Ambos campos son obligatorios \n                            o Presupuesto incorrecto\"\n                />\n                : null\n            }\n            <div className=\"campo\">\n                <label>Nombre Gasto</label>\n                <input\n                    type=\"text\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. Transporte\"\n                    value={nombre}\n                    onChange={e => setNombre(e.target.value)}\n                />\n                <label>Cantidad Gasto</label>\n                <input\n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. 300\"\n                    onChange={e => setCantidad(parseInt(e.target.value))}\n                    value={cantidad}\n                />\n                <input\n                    type=\"submit\"\n                    className=\"button-primary u-full-width\"\n                    value=\"Agregar Gasto\"\n                />\n\n            </div>\n        </form>\n    );\n\n}\nFormulario.propTypes = {\n    setGasto: PropTypes.func.isRequired,\n    setCrearGasto: PropTypes.func.isRequired,\n\n}\n\n\nexport default Formulario;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Gasto = ({ gasto, eliminar }) => (\n    <div className=\"containerGasto\">\n        <li className=\"gastos\">\n            <p>\n                <span className=\"nombre\">\n                    {gasto.nombre}\n                </span>\n\n                <span className=\"gasto\">\n                    ${gasto.cantidad}\n                </span>\n            </p>\n        </li >\n        <button\n            className=\"button-primary \"\n            onClick={() => eliminar(gasto.id)}\n        >\n            Eliminar\n        </button>\n    </div >\n);\n\nGasto.propTypes = {\n    gasto: PropTypes.object.isRequired\n}\n\nexport default Gasto;","import React from 'react';\nimport Gasto from \"./Gasto\";\nimport PropTypes from \"prop-types\";\n\nexport default function Listado(props) {\n\n    const { gastos, eliminar } = props;\n\n    return (\n        <div className=\"gastos-realizados\">\n            <h2>Listado</h2>\n            {gastos.map(gasto => (\n                <Gasto\n                    key={gasto.id}\n                    gasto={gasto}\n                    eliminar={eliminar}\n                />\n            ))}\n        </div>\n    )\n\n}\n\n\n\nListado.propTypes = {\n    gastos: PropTypes.array.isRequired\n}\n","export const revisarPresupuesto = (presupuesto, restante) => {\n    let clase;\n    if ((presupuesto / 4) > restante) {\n        clase = \"alert alert-danger\"\n    } else if ((presupuesto / 2) > restante) {\n        clase = \"alert alert-warning\"\n    } else {\n        clase = \"alert alert-success\"\n    }\n    return clase;\n}","import React, { Fragment } from 'react';\nimport PropTypes from \"prop-types\";\nimport { revisarPresupuesto } from \"../helpers\";\n\n\nconst ControlPresupuesto = ({ presupuesto, restante }) => {\n    return (\n        <Fragment>\n            <div className=\"alert alert-primary\">\n                Presupuesto: ${presupuesto}\n            </div>\n            <div className={revisarPresupuesto(presupuesto, restante)}>\n                Restante: ${restante}\n            </div>\n        </Fragment>\n    );\n}\n\nControlPresupuesto.propTypes = {\n    presupuesto: PropTypes.number.isRequired,\n    restante: PropTypes.number.isRequired,\n}\n\nexport default ControlPresupuesto;","import React, { useState, useEffect } from 'react';\nimport Pregunta from \"./components/Pregunta\";\nimport Formulario from \"./components/Formulario\";\nimport Listado from \"./components/Listado\";\nimport ControlPresupuesto from \"./components/ControlPresupuesto\";\n\nfunction App() {\n\n  const [presupuesto, setPresupuesto] = useState(0);\n  const [restante, setRestante] = useState(0);\n  const [mostrarPregunta, setMostrarPregunta] = useState(true);\n  const [gastos, setGastos] = useState([]);\n  const [gasto, setGasto] = useState({});\n  const [crearGasto, setCrearGasto] = useState(false);\n\n\n  useEffect(() => {\n    if (crearGasto) {\n      setGastos([\n        ...gastos,\n        gasto\n      ]);\n\n      const presupuestoRestante = restante - gasto.cantidad;\n      setRestante(presupuestoRestante);\n      setCrearGasto(false);\n    }\n  }, [gasto, crearGasto, gastos, restante])\n\n  const eliminar = (id) => {\n    const nuevoGasto = gastos.filter(gasto => gasto.id !== id)\n    let nuevoPresupuesto = 0;\n    setGastos(nuevoGasto);\n\n    nuevoGasto.map((gasto) => {\n      nuevoPresupuesto = nuevoPresupuesto + gasto.cantidad\n      return nuevoPresupuesto\n    })\n    setRestante(presupuesto - nuevoPresupuesto)\n  }\n\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n        <div className=\"contenido-principal contenido\">\n          {mostrarPregunta\n            ?\n            (<Pregunta\n              setMostrarPregunta={setMostrarPregunta}\n              setPresupuesto={setPresupuesto}\n              setRestante={setRestante}\n            />) : (\n              <div className=\"row\">\n                <div className=\"one-half column\">\n                  <Formulario\n                    setGasto={setGasto}\n                    setCrearGasto={setCrearGasto}\n                  />\n                </div>\n                <div className=\"one-half column\">\n                  <Listado\n                    gastos={gastos}\n                    eliminar={eliminar}\n                  />\n                  <ControlPresupuesto\n                    presupuesto={presupuesto}\n                    restante={restante}\n                  />\n                </div>\n              </div>\n            )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}